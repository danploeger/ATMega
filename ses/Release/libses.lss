In archive libses.a:

ses_lcdDriver.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.lcdDriver_init 00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.lcdDriver_writeData 00000016  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.lcdDriver_writeCommand 00000016  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.lcdDriver_selectController 0000000c  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.lcdDriver_readStatus 00000014  00000000  00000000  0000007c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000090  2**0
                  CONTENTS, READONLY

Disassembly of section .text.lcdDriver_init:

00000000 <lcdDriver_init>:
   0:	54 9a       	sbi	0x0a, 4	; 10
   2:	55 9a       	sbi	0x0a, 5	; 10
   4:	57 9a       	sbi	0x0a, 7	; 10
   6:	56 9a       	sbi	0x0a, 6	; 10
   8:	5d 9a       	sbi	0x0b, 5	; 11
   a:	5f 9a       	sbi	0x0b, 7	; 11
   c:	5e 98       	cbi	0x0b, 6	; 11
   e:	08 95       	ret

Disassembly of section .text.lcdDriver_writeData:

00000010 <lcdDriver_writeData>:
  10:	9f ef       	ldi	r25, 0xFF	; 255
  12:	9d b9       	out	0x0d, r25	; 13
  14:	5e 9a       	sbi	0x0b, 6	; 11
  16:	5d 98       	cbi	0x0b, 5	; 11
  18:	8e b9       	out	0x0e, r24	; 14
  1a:	00 00       	nop
  1c:	00 00       	nop
  1e:	00 00       	nop
  20:	5d 9a       	sbi	0x0b, 5	; 11
  22:	5e 98       	cbi	0x0b, 6	; 11
  24:	08 95       	ret

Disassembly of section .text.lcdDriver_writeCommand:

00000036 <lcdDriver_writeCommand>:
  36:	9f ef       	ldi	r25, 0xFF	; 255
  38:	9d b9       	out	0x0d, r25	; 13
  3a:	5e 98       	cbi	0x0b, 6	; 11
  3c:	5d 98       	cbi	0x0b, 5	; 11
  3e:	8e b9       	out	0x0e, r24	; 14
  40:	00 00       	nop
  42:	00 00       	nop
  44:	00 00       	nop
  46:	5d 9a       	sbi	0x0b, 5	; 11
  48:	5e 98       	cbi	0x0b, 6	; 11
  4a:	08 95       	ret

Disassembly of section .text.lcdDriver_selectController:

00000082 <lcdDriver_selectController>:
  82:	88 23       	and	r24, r24
  84:	01 f0       	breq	.+0      	; 0x86 <lcdDriver_selectController+0x4>
  86:	5c 9a       	sbi	0x0b, 4	; 11
  88:	08 95       	ret
  8a:	5c 98       	cbi	0x0b, 4	; 11
  8c:	08 95       	ret

Disassembly of section .text.lcdDriver_readStatus:

00000110 <lcdDriver_readStatus>:
 110:	1d b8       	out	0x0d, r1	; 13
 112:	1e b8       	out	0x0e, r1	; 14
 114:	5e 98       	cbi	0x0b, 6	; 11
 116:	5f 98       	cbi	0x0b, 7	; 11
 118:	00 00       	nop
 11a:	00 00       	nop
 11c:	00 00       	nop
 11e:	8e b1       	in	r24, 0x0e	; 14
 120:	5f 9a       	sbi	0x0b, 7	; 11
 122:	08 95       	ret

ses_led.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.led_redInit 00000004  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.led_redToggle 0000000a  00000000  00000000  00000038  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.led_redOn 00000004  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.led_redOff 00000004  00000000  00000000  00000046  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.led_yellowInit 00000004  00000000  00000000  0000004a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.led_yellowToggle 00000008  00000000  00000000  0000004e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text.led_yellowOn 00000004  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text.led_yellowOff 00000004  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.led_greenInit 00000004  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.led_greenToggle 0000000a  00000000  00000000  00000062  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.led_greenOn 00000004  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.led_greenOff 00000004  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .comment      00000012  00000000  00000000  00000074  2**0
                  CONTENTS, READONLY

Disassembly of section .text.led_redInit:

00000000 <led_redInit>:
   0:	99 9a       	sbi	0x13, 1	; 19
   2:	08 95       	ret

Disassembly of section .text.led_redToggle:

00000004 <led_redToggle>:
   4:	84 b3       	in	r24, 0x14	; 20
   6:	92 e0       	ldi	r25, 0x02	; 2
   8:	89 27       	eor	r24, r25
   a:	84 bb       	out	0x14, r24	; 20
   c:	08 95       	ret

Disassembly of section .text.led_redOn:

00000012 <led_redOn>:
  12:	a1 98       	cbi	0x14, 1	; 20
  14:	08 95       	ret

Disassembly of section .text.led_redOff:

00000028 <led_redOff>:
  28:	a1 9a       	sbi	0x14, 1	; 20
  2a:	08 95       	ret

Disassembly of section .text.led_yellowInit:

00000054 <led_yellowInit>:
  54:	87 9a       	sbi	0x10, 7	; 16
  56:	08 95       	ret

Disassembly of section .text.led_yellowToggle:

000000ac <led_yellowToggle>:
  ac:	81 b3       	in	r24, 0x11	; 17
  ae:	80 58       	subi	r24, 0x80	; 128
  b0:	81 bb       	out	0x11, r24	; 17
  b2:	08 95       	ret

Disassembly of section .text.led_yellowOn:

00000160 <led_yellowOn>:
 160:	8f 98       	cbi	0x11, 7	; 17
 162:	08 95       	ret

Disassembly of section .text.led_yellowOff:

000002c4 <led_yellowOff>:
 2c4:	8f 9a       	sbi	0x11, 7	; 17
 2c6:	08 95       	ret

Disassembly of section .text.led_greenInit:

0000058c <led_greenInit>:
 58c:	86 9a       	sbi	0x10, 6	; 16
 58e:	08 95       	ret

Disassembly of section .text.led_greenToggle:

00000b1c <led_greenToggle>:
 b1c:	81 b3       	in	r24, 0x11	; 17
 b1e:	90 e4       	ldi	r25, 0x40	; 64
 b20:	89 27       	eor	r24, r25
 b22:	81 bb       	out	0x11, r24	; 17
 b24:	08 95       	ret

Disassembly of section .text.led_greenOn:

00001642 <led_greenOn>:
    1642:	8e 98       	cbi	0x11, 6	; 17
    1644:	08 95       	ret

Disassembly of section .text.led_greenOff:

00002c88 <led_greenOff>:
    2c88:	8e 9a       	sbi	0x11, 6	; 17
    2c8a:	08 95       	ret

ses_scheduler.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.scheduler_update 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.scheduler_init 00000008  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.scheduler_run 000000a2  00000000  00000000  00000074  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.scheduler_add 0000006c  00000000  00000000  00000116  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.scheduler_remove 0000002e  00000000  00000000  00000182  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY

Disassembly of section .text.scheduler_update:

00000000 <scheduler_update>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	56 e0       	ldi	r21, 0x06	; 6
   6:	4f b7       	in	r20, 0x3f	; 63
   8:	f8 94       	cli
   a:	58 9f       	mul	r21, r24
   c:	f0 01       	movw	r30, r0
   e:	59 9f       	mul	r21, r25
  10:	f0 0d       	add	r31, r0
  12:	11 24       	eor	r1, r1
  14:	e0 50       	subi	r30, 0x00	; 0
  16:	f0 40       	sbci	r31, 0x00	; 0
  18:	20 81       	ld	r18, Z
  1a:	31 81       	ldd	r19, Z+1	; 0x01
  1c:	23 2b       	or	r18, r19
  1e:	01 f0       	breq	.+0      	; 0x20 <scheduler_update+0x20>
  20:	22 81       	ldd	r18, Z+2	; 0x02
  22:	33 81       	ldd	r19, Z+3	; 0x03
  24:	21 50       	subi	r18, 0x01	; 1
  26:	31 09       	sbc	r19, r1
  28:	33 83       	std	Z+3, r19	; 0x03
  2a:	22 83       	std	Z+2, r18	; 0x02
  2c:	4f bf       	out	0x3f, r20	; 63
  2e:	01 96       	adiw	r24, 0x01	; 1
  30:	8a 30       	cpi	r24, 0x0A	; 10
  32:	91 05       	cpc	r25, r1
  34:	01 f4       	brne	.+0      	; 0x36 <scheduler_update+0x36>
  36:	08 95       	ret

Disassembly of section .text.scheduler_init:

00000038 <scheduler_init>:
  38:	80 e0       	ldi	r24, 0x00	; 0
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	0c 94 00 00 	jmp	0	; 0x0 <__tmp_reg__>

Disassembly of section .text.scheduler_run:

00000078 <scheduler_run>:
  78:	cf 92       	push	r12
  7a:	df 92       	push	r13
  7c:	ef 92       	push	r14
  7e:	ff 92       	push	r15
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	00 d0       	rcall	.+0      	; 0x8a <scheduler_run+0x12>
  8a:	00 d0       	rcall	.+0      	; 0x8c <scheduler_run+0x14>
  8c:	00 d0       	rcall	.+0      	; 0x8e <scheduler_run+0x16>
  8e:	cd b7       	in	r28, 0x3d	; 61
  90:	de b7       	in	r29, 0x3e	; 62
  92:	00 e0       	ldi	r16, 0x00	; 0
  94:	10 e0       	ldi	r17, 0x00	; 0
  96:	86 e0       	ldi	r24, 0x06	; 6
  98:	d8 2e       	mov	r13, r24
  9a:	d0 9e       	mul	r13, r16
  9c:	f0 01       	movw	r30, r0
  9e:	d1 9e       	mul	r13, r17
  a0:	f0 0d       	add	r31, r0
  a2:	11 24       	eor	r1, r1
  a4:	e0 50       	subi	r30, 0x00	; 0
  a6:	f0 40       	sbci	r31, 0x00	; 0
  a8:	de 01       	movw	r26, r28
  aa:	11 96       	adiw	r26, 0x01	; 1
  ac:	8d 2d       	mov	r24, r13
  ae:	01 90       	ld	r0, Z+
  b0:	0d 92       	st	X+, r0
  b2:	8a 95       	dec	r24
  b4:	01 f4       	brne	.+0      	; 0xb6 <scheduler_run+0x3e>
  b6:	e9 81       	ldd	r30, Y+1	; 0x01
  b8:	fa 81       	ldd	r31, Y+2	; 0x02
  ba:	8b 81       	ldd	r24, Y+3	; 0x03
  bc:	9c 81       	ldd	r25, Y+4	; 0x04
  be:	ed 80       	ldd	r14, Y+5	; 0x05
  c0:	fe 80       	ldd	r15, Y+6	; 0x06
  c2:	30 97       	sbiw	r30, 0x00	; 0
  c4:	01 f0       	breq	.+0      	; 0xc6 <scheduler_run+0x4e>
  c6:	cf b6       	in	r12, 0x3f	; 63
  c8:	f8 94       	cli
  ca:	89 2b       	or	r24, r25
  cc:	01 f4       	brne	.+0      	; 0xce <scheduler_run+0x56>
  ce:	09 95       	icall
  d0:	d0 9e       	mul	r13, r16
  d2:	f0 01       	movw	r30, r0
  d4:	d1 9e       	mul	r13, r17
  d6:	f0 0d       	add	r31, r0
  d8:	11 24       	eor	r1, r1
  da:	e0 50       	subi	r30, 0x00	; 0
  dc:	f0 40       	sbci	r31, 0x00	; 0
  de:	ef 28       	or	r14, r15
  e0:	01 f4       	brne	.+0      	; 0xe2 <scheduler_run+0x6a>
  e2:	11 82       	std	Z+1, r1	; 0x01
  e4:	10 82       	st	Z, r1
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <scheduler_run+0x70>
  e8:	84 81       	ldd	r24, Z+4	; 0x04
  ea:	95 81       	ldd	r25, Z+5	; 0x05
  ec:	93 83       	std	Z+3, r25	; 0x03
  ee:	82 83       	std	Z+2, r24	; 0x02
  f0:	cf be       	out	0x3f, r12	; 63
  f2:	0f 5f       	subi	r16, 0xFF	; 255
  f4:	1f 4f       	sbci	r17, 0xFF	; 255
  f6:	0a 30       	cpi	r16, 0x0A	; 10
  f8:	11 05       	cpc	r17, r1
  fa:	01 f4       	brne	.+0      	; 0xfc <scheduler_run+0x84>
  fc:	26 96       	adiw	r28, 0x06	; 6
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	f8 94       	cli
 102:	de bf       	out	0x3e, r29	; 62
 104:	0f be       	out	0x3f, r0	; 63
 106:	cd bf       	out	0x3d, r28	; 61
 108:	df 91       	pop	r29
 10a:	cf 91       	pop	r28
 10c:	1f 91       	pop	r17
 10e:	0f 91       	pop	r16
 110:	ff 90       	pop	r15
 112:	ef 90       	pop	r14
 114:	df 90       	pop	r13
 116:	cf 90       	pop	r12
 118:	08 95       	ret

Disassembly of section .text.scheduler_add:

00000192 <scheduler_add>:
 192:	1f 93       	push	r17
 194:	cf 93       	push	r28
 196:	df 93       	push	r29
 198:	00 d0       	rcall	.+0      	; 0x19a <scheduler_add+0x8>
 19a:	00 d0       	rcall	.+0      	; 0x19c <scheduler_add+0xa>
 19c:	00 d0       	rcall	.+0      	; 0x19e <scheduler_add+0xc>
 19e:	cd b7       	in	r28, 0x3d	; 61
 1a0:	de b7       	in	r29, 0x3e	; 62
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	16 e0       	ldi	r17, 0x06	; 6
 1a8:	12 9f       	mul	r17, r18
 1aa:	d0 01       	movw	r26, r0
 1ac:	13 9f       	mul	r17, r19
 1ae:	b0 0d       	add	r27, r0
 1b0:	11 24       	eor	r1, r1
 1b2:	a0 50       	subi	r26, 0x00	; 0
 1b4:	b0 40       	sbci	r27, 0x00	; 0
 1b6:	ed 91       	ld	r30, X+
 1b8:	fc 91       	ld	r31, X
 1ba:	11 97       	sbiw	r26, 0x01	; 1
 1bc:	ef 2b       	or	r30, r31
 1be:	01 f4       	brne	.+0      	; 0x1c0 <scheduler_add+0x2e>
 1c0:	9a 83       	std	Y+2, r25	; 0x02
 1c2:	89 83       	std	Y+1, r24	; 0x01
 1c4:	7c 83       	std	Y+4, r23	; 0x04
 1c6:	6b 83       	std	Y+3, r22	; 0x03
 1c8:	5e 83       	std	Y+6, r21	; 0x06
 1ca:	4d 83       	std	Y+5, r20	; 0x05
 1cc:	86 e0       	ldi	r24, 0x06	; 6
 1ce:	fe 01       	movw	r30, r28
 1d0:	31 96       	adiw	r30, 0x01	; 1
 1d2:	01 90       	ld	r0, Z+
 1d4:	0d 92       	st	X+, r0
 1d6:	8a 95       	dec	r24
 1d8:	01 f4       	brne	.+0      	; 0x1da <scheduler_add+0x48>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <scheduler_add+0x4c>
 1de:	2f 5f       	subi	r18, 0xFF	; 255
 1e0:	3f 4f       	sbci	r19, 0xFF	; 255
 1e2:	2a 30       	cpi	r18, 0x0A	; 10
 1e4:	31 05       	cpc	r19, r1
 1e6:	01 f4       	brne	.+0      	; 0x1e8 <scheduler_add+0x56>
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	26 96       	adiw	r28, 0x06	; 6
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	f8 94       	cli
 1f0:	de bf       	out	0x3e, r29	; 62
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	cd bf       	out	0x3d, r28	; 61
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	1f 91       	pop	r17
 1fc:	08 95       	ret

Disassembly of section .text.scheduler_remove:

00000390 <scheduler_remove>:
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	66 e0       	ldi	r22, 0x06	; 6
 396:	62 9f       	mul	r22, r18
 398:	f0 01       	movw	r30, r0
 39a:	63 9f       	mul	r22, r19
 39c:	f0 0d       	add	r31, r0
 39e:	11 24       	eor	r1, r1
 3a0:	e0 50       	subi	r30, 0x00	; 0
 3a2:	f0 40       	sbci	r31, 0x00	; 0
 3a4:	40 81       	ld	r20, Z
 3a6:	51 81       	ldd	r21, Z+1	; 0x01
 3a8:	84 17       	cp	r24, r20
 3aa:	95 07       	cpc	r25, r21
 3ac:	01 f4       	brne	.+0      	; 0x3ae <scheduler_remove+0x1e>
 3ae:	11 82       	std	Z+1, r1	; 0x01
 3b0:	10 82       	st	Z, r1
 3b2:	2f 5f       	subi	r18, 0xFF	; 255
 3b4:	3f 4f       	sbci	r19, 0xFF	; 255
 3b6:	2a 30       	cpi	r18, 0x0A	; 10
 3b8:	31 05       	cpc	r19, r1
 3ba:	01 f4       	brne	.+0      	; 0x3bc <scheduler_remove+0x2c>
 3bc:	08 95       	ret

ses_timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.timer2_init 0000003a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.__vector_13 0000005a  00000000  00000000  0000006e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .bss.timer2_callback 00000002  00000000  00000000  000000c8  2**0
                  ALLOC
  6 .comment      00000012  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY

Disassembly of section .text.timer2_init:

00000000 <timer2_init>:
   0:	90 93 00 00 	sts	0x0000, r25
   4:	80 93 00 00 	sts	0x0000, r24
   8:	e4 e6       	ldi	r30, 0x64	; 100
   a:	f0 e0       	ldi	r31, 0x00	; 0
   c:	80 81       	ld	r24, Z
   e:	8f 7b       	andi	r24, 0xBF	; 191
  10:	80 83       	st	Z, r24
  12:	e0 eb       	ldi	r30, 0xB0	; 176
  14:	f0 e0       	ldi	r31, 0x00	; 0
  16:	80 81       	ld	r24, Z
  18:	82 60       	ori	r24, 0x02	; 2
  1a:	80 83       	st	Z, r24
  1c:	8a ef       	ldi	r24, 0xFA	; 250
  1e:	80 93 b3 00 	sts	0x00B3, r24
  22:	e1 eb       	ldi	r30, 0xB1	; 177
  24:	f0 e0       	ldi	r31, 0x00	; 0
  26:	80 81       	ld	r24, Z
  28:	84 60       	ori	r24, 0x04	; 4
  2a:	80 83       	st	Z, r24
  2c:	e0 e7       	ldi	r30, 0x70	; 112
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	80 81       	ld	r24, Z
  32:	82 60       	ori	r24, 0x02	; 2
  34:	80 83       	st	Z, r24
  36:	b9 9a       	sbi	0x17, 1	; 23
  38:	08 95       	ret

Disassembly of section .text.__vector_13:

0000003a <__vector_13>:
  3a:	1f 92       	push	r1
  3c:	0f 92       	push	r0
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	0f 92       	push	r0
  42:	11 24       	eor	r1, r1
  44:	0b b6       	in	r0, 0x3b	; 59
  46:	0f 92       	push	r0
  48:	2f 93       	push	r18
  4a:	3f 93       	push	r19
  4c:	4f 93       	push	r20
  4e:	5f 93       	push	r21
  50:	6f 93       	push	r22
  52:	7f 93       	push	r23
  54:	8f 93       	push	r24
  56:	9f 93       	push	r25
  58:	af 93       	push	r26
  5a:	bf 93       	push	r27
  5c:	ef 93       	push	r30
  5e:	ff 93       	push	r31
  60:	e0 91 00 00 	lds	r30, 0x0000
  64:	f0 91 00 00 	lds	r31, 0x0000
  68:	30 97       	sbiw	r30, 0x00	; 0
  6a:	01 f0       	breq	.+0      	; 0x6c <__vector_13+0x32>
  6c:	09 95       	icall
  6e:	ff 91       	pop	r31
  70:	ef 91       	pop	r30
  72:	bf 91       	pop	r27
  74:	af 91       	pop	r26
  76:	9f 91       	pop	r25
  78:	8f 91       	pop	r24
  7a:	7f 91       	pop	r23
  7c:	6f 91       	pop	r22
  7e:	5f 91       	pop	r21
  80:	4f 91       	pop	r20
  82:	3f 91       	pop	r19
  84:	2f 91       	pop	r18
  86:	0f 90       	pop	r0
  88:	0b be       	out	0x3b, r0	; 59
  8a:	0f 90       	pop	r0
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	0f 90       	pop	r0
  90:	1f 90       	pop	r1
  92:	18 95       	reti
