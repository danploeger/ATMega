In archive libses.a:

ses_button.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.button_init 00000022  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.button_setRotaryButtonCallback 0000000a  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.button_setJoystickButtonCallback 0000000a  00000000  00000000  00000060  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.__vector_9 00000070  00000000  00000000  0000006a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.button_init:

00000000 <button_init>:
   0:	84 b1       	in	r24, 0x04	; 4
   2:	8f 73       	andi	r24, 0x3F	; 63
   4:	84 b9       	out	0x04, r24	; 4
   6:	85 b1       	in	r24, 0x05	; 5
   8:	80 6c       	ori	r24, 0xC0	; 192
   a:	85 b9       	out	0x05, r24	; 5
   c:	e8 e6       	ldi	r30, 0x68	; 104
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	80 81       	ld	r24, Z
  12:	81 60       	ori	r24, 0x01	; 1
  14:	80 83       	st	Z, r24
  16:	eb e6       	ldi	r30, 0x6B	; 107
  18:	f0 e0       	ldi	r31, 0x00	; 0
  1a:	80 81       	ld	r24, Z
  1c:	80 6c       	ori	r24, 0xC0	; 192
  1e:	80 83       	st	Z, r24
  20:	08 95       	ret

Disassembly of section .text.button_setRotaryButtonCallback:

00000000 <button_setRotaryButtonCallback>:
   0:	90 93 00 00 	sts	0x0000, r25
   4:	80 93 00 00 	sts	0x0000, r24
   8:	08 95       	ret

Disassembly of section .text.button_setJoystickButtonCallback:

00000000 <button_setJoystickButtonCallback>:
   0:	90 93 00 00 	sts	0x0000, r25
   4:	80 93 00 00 	sts	0x0000, r24
   8:	08 95       	ret

Disassembly of section .text.__vector_9:

00000000 <__vector_9>:
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	0b b6       	in	r0, 0x3b	; 59
   a:	0f 92       	push	r0
   c:	11 24       	eor	r1, r1
   e:	2f 93       	push	r18
  10:	3f 93       	push	r19
  12:	4f 93       	push	r20
  14:	5f 93       	push	r21
  16:	6f 93       	push	r22
  18:	7f 93       	push	r23
  1a:	8f 93       	push	r24
  1c:	9f 93       	push	r25
  1e:	af 93       	push	r26
  20:	bf 93       	push	r27
  22:	ef 93       	push	r30
  24:	ff 93       	push	r31
  26:	2e 9b       	sbis	0x05, 6	; 5
  28:	00 c0       	rjmp	.+0      	; 0x2a <__vector_9+0x2a>
  2a:	e0 91 00 00 	lds	r30, 0x0000
  2e:	f0 91 00 00 	lds	r31, 0x0000
  32:	30 97       	sbiw	r30, 0x00	; 0
  34:	01 f0       	breq	.+0      	; 0x36 <__vector_9+0x36>
  36:	09 95       	icall
  38:	2f 9b       	sbis	0x05, 7	; 5
  3a:	00 c0       	rjmp	.+0      	; 0x3c <__vector_9+0x3c>
  3c:	e0 91 00 00 	lds	r30, 0x0000
  40:	f0 91 00 00 	lds	r31, 0x0000
  44:	30 97       	sbiw	r30, 0x00	; 0
  46:	01 f0       	breq	.+0      	; 0x48 <__vector_9+0x48>
  48:	09 95       	icall
  4a:	ff 91       	pop	r31
  4c:	ef 91       	pop	r30
  4e:	bf 91       	pop	r27
  50:	af 91       	pop	r26
  52:	9f 91       	pop	r25
  54:	8f 91       	pop	r24
  56:	7f 91       	pop	r23
  58:	6f 91       	pop	r22
  5a:	5f 91       	pop	r21
  5c:	4f 91       	pop	r20
  5e:	3f 91       	pop	r19
  60:	2f 91       	pop	r18
  62:	0f 90       	pop	r0
  64:	0b be       	out	0x3b, r0	; 59
  66:	0f 90       	pop	r0
  68:	0f be       	out	0x3f, r0	; 63
  6a:	0f 90       	pop	r0
  6c:	1f 90       	pop	r1
  6e:	18 95       	reti

ses_lcdDriver.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.lcdDriver_init 00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.lcdDriver_writeData 00000016  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.lcdDriver_writeCommand 00000016  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.lcdDriver_selectController 0000000c  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.lcdDriver_readStatus 00000014  00000000  00000000  0000007c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text.lcdDriver_init:

00000000 <lcdDriver_init>:
   0:	54 9a       	sbi	0x0a, 4	; 10
   2:	55 9a       	sbi	0x0a, 5	; 10
   4:	57 9a       	sbi	0x0a, 7	; 10
   6:	56 9a       	sbi	0x0a, 6	; 10
   8:	5d 9a       	sbi	0x0b, 5	; 11
   a:	5f 9a       	sbi	0x0b, 7	; 11
   c:	5e 98       	cbi	0x0b, 6	; 11
   e:	08 95       	ret

Disassembly of section .text.lcdDriver_writeData:

00000000 <lcdDriver_writeData>:
   0:	9f ef       	ldi	r25, 0xFF	; 255
   2:	9d b9       	out	0x0d, r25	; 13
   4:	5e 9a       	sbi	0x0b, 6	; 11
   6:	5d 98       	cbi	0x0b, 5	; 11
   8:	8e b9       	out	0x0e, r24	; 14
   a:	00 00       	nop
   c:	00 00       	nop
   e:	00 00       	nop
  10:	5d 9a       	sbi	0x0b, 5	; 11
  12:	5e 98       	cbi	0x0b, 6	; 11
  14:	08 95       	ret

Disassembly of section .text.lcdDriver_writeCommand:

00000000 <lcdDriver_writeCommand>:
   0:	9f ef       	ldi	r25, 0xFF	; 255
   2:	9d b9       	out	0x0d, r25	; 13
   4:	5e 98       	cbi	0x0b, 6	; 11
   6:	5d 98       	cbi	0x0b, 5	; 11
   8:	8e b9       	out	0x0e, r24	; 14
   a:	00 00       	nop
   c:	00 00       	nop
   e:	00 00       	nop
  10:	5d 9a       	sbi	0x0b, 5	; 11
  12:	5e 98       	cbi	0x0b, 6	; 11
  14:	08 95       	ret

Disassembly of section .text.lcdDriver_selectController:

00000000 <lcdDriver_selectController>:
   0:	88 23       	and	r24, r24
   2:	01 f0       	breq	.+0      	; 0x4 <lcdDriver_selectController+0x4>
   4:	5c 9a       	sbi	0x0b, 4	; 11
   6:	08 95       	ret
   8:	5c 98       	cbi	0x0b, 4	; 11
   a:	08 95       	ret

Disassembly of section .text.lcdDriver_readStatus:

00000000 <lcdDriver_readStatus>:
   0:	1d b8       	out	0x0d, r1	; 13
   2:	1e b8       	out	0x0e, r1	; 14
   4:	5e 98       	cbi	0x0b, 6	; 11
   6:	5f 98       	cbi	0x0b, 7	; 11
   8:	00 00       	nop
   a:	00 00       	nop
   c:	00 00       	nop
   e:	8e b1       	in	r24, 0x0e	; 14
  10:	5f 9a       	sbi	0x0b, 7	; 11
  12:	08 95       	ret

ses_led.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.led_redInit 00000004  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.led_redToggle 0000000a  00000000  00000000  00000038  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.led_redOn 00000004  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.led_redOff 00000004  00000000  00000000  00000046  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.led_yellowInit 00000004  00000000  00000000  0000004a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.led_yellowToggle 00000008  00000000  00000000  0000004e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text.led_yellowOn 00000004  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text.led_yellowOff 00000004  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.led_greenInit 00000004  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.led_greenToggle 0000000a  00000000  00000000  00000062  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.led_greenOn 00000004  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.led_greenOff 00000004  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text.led_redInit:

00000000 <led_redInit>:
   0:	99 9a       	sbi	0x13, 1	; 19
   2:	08 95       	ret

Disassembly of section .text.led_redToggle:

00000000 <led_redToggle>:
   0:	84 b3       	in	r24, 0x14	; 20
   2:	92 e0       	ldi	r25, 0x02	; 2
   4:	89 27       	eor	r24, r25
   6:	84 bb       	out	0x14, r24	; 20
   8:	08 95       	ret

Disassembly of section .text.led_redOn:

00000000 <led_redOn>:
   0:	a1 98       	cbi	0x14, 1	; 20
   2:	08 95       	ret

Disassembly of section .text.led_redOff:

00000000 <led_redOff>:
   0:	a1 9a       	sbi	0x14, 1	; 20
   2:	08 95       	ret

Disassembly of section .text.led_yellowInit:

00000000 <led_yellowInit>:
   0:	87 9a       	sbi	0x10, 7	; 16
   2:	08 95       	ret

Disassembly of section .text.led_yellowToggle:

00000000 <led_yellowToggle>:
   0:	81 b3       	in	r24, 0x11	; 17
   2:	80 58       	subi	r24, 0x80	; 128
   4:	81 bb       	out	0x11, r24	; 17
   6:	08 95       	ret

Disassembly of section .text.led_yellowOn:

00000000 <led_yellowOn>:
   0:	8f 98       	cbi	0x11, 7	; 17
   2:	08 95       	ret

Disassembly of section .text.led_yellowOff:

00000000 <led_yellowOff>:
   0:	8f 9a       	sbi	0x11, 7	; 17
   2:	08 95       	ret

Disassembly of section .text.led_greenInit:

00000000 <led_greenInit>:
   0:	86 9a       	sbi	0x10, 6	; 16
   2:	08 95       	ret

Disassembly of section .text.led_greenToggle:

00000000 <led_greenToggle>:
   0:	81 b3       	in	r24, 0x11	; 17
   2:	90 e4       	ldi	r25, 0x40	; 64
   4:	89 27       	eor	r24, r25
   6:	81 bb       	out	0x11, r24	; 17
   8:	08 95       	ret

Disassembly of section .text.led_greenOn:

00000000 <led_greenOn>:
   0:	8e 98       	cbi	0x11, 6	; 17
   2:	08 95       	ret

Disassembly of section .text.led_greenOff:

00000000 <led_greenOff>:
   0:	8e 9a       	sbi	0x11, 6	; 17
   2:	08 95       	ret

ses_scheduler.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.scheduler_update 00000046  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.scheduler_run 000000c0  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.scheduler_add 0000006a  00000000  00000000  0000013a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.scheduler_remove 00000032  00000000  00000000  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.scheduler_init 0000000a  00000000  00000000  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.scheduler_update:

00000000 <scheduler_update>:
   0:	40 e0       	ldi	r20, 0x00	; 0
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	6f b7       	in	r22, 0x3f	; 63
   6:	f8 94       	cli
   8:	9a 01       	movw	r18, r20
   a:	22 0f       	add	r18, r18
   c:	33 1f       	adc	r19, r19
   e:	24 0f       	add	r18, r20
  10:	35 1f       	adc	r19, r21
  12:	f9 01       	movw	r30, r18
  14:	ee 0f       	add	r30, r30
  16:	ff 1f       	adc	r31, r31
  18:	e0 50       	subi	r30, 0x00	; 0
  1a:	f0 40       	sbci	r31, 0x00	; 0
  1c:	80 81       	ld	r24, Z
  1e:	91 81       	ldd	r25, Z+1	; 0x01
  20:	89 2b       	or	r24, r25
  22:	01 f0       	breq	.+0      	; 0x24 <scheduler_update+0x24>
  24:	f9 01       	movw	r30, r18
  26:	ee 0f       	add	r30, r30
  28:	ff 1f       	adc	r31, r31
  2a:	e0 50       	subi	r30, 0x00	; 0
  2c:	f0 40       	sbci	r31, 0x00	; 0
  2e:	80 81       	ld	r24, Z
  30:	91 81       	ldd	r25, Z+1	; 0x01
  32:	01 97       	sbiw	r24, 0x01	; 1
  34:	91 83       	std	Z+1, r25	; 0x01
  36:	80 83       	st	Z, r24
  38:	6f bf       	out	0x3f, r22	; 63
  3a:	4f 5f       	subi	r20, 0xFF	; 255
  3c:	5f 4f       	sbci	r21, 0xFF	; 255
  3e:	4a 30       	cpi	r20, 0x0A	; 10
  40:	51 05       	cpc	r21, r1
  42:	01 f4       	brne	.+0      	; 0x44 <scheduler_update+0x44>
  44:	08 95       	ret

Disassembly of section .text.scheduler_run:

00000000 <scheduler_run>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	df 93       	push	r29
   c:	cf 93       	push	r28
   e:	00 d0       	rcall	.+0      	; 0x10 <scheduler_run+0x10>
  10:	00 d0       	rcall	.+0      	; 0x12 <scheduler_run+0x12>
  12:	00 d0       	rcall	.+0      	; 0x14 <scheduler_run+0x14>
  14:	cd b7       	in	r28, 0x3d	; 61
  16:	de b7       	in	r29, 0x3e	; 62
  18:	00 e0       	ldi	r16, 0x00	; 0
  1a:	10 e0       	ldi	r17, 0x00	; 0
  1c:	6e 01       	movw	r12, r28
  1e:	08 94       	sec
  20:	c1 1c       	adc	r12, r1
  22:	d1 1c       	adc	r13, r1
  24:	f8 01       	movw	r30, r16
  26:	ee 0f       	add	r30, r30
  28:	ff 1f       	adc	r31, r31
  2a:	e0 0f       	add	r30, r16
  2c:	f1 1f       	adc	r31, r17
  2e:	ee 0f       	add	r30, r30
  30:	ff 1f       	adc	r31, r31
  32:	d6 01       	movw	r26, r12
  34:	e0 50       	subi	r30, 0x00	; 0
  36:	f0 40       	sbci	r31, 0x00	; 0
  38:	86 e0       	ldi	r24, 0x06	; 6
  3a:	01 90       	ld	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	81 50       	subi	r24, 0x01	; 1
  40:	01 f4       	brne	.+0      	; 0x42 <scheduler_run+0x42>
  42:	e9 81       	ldd	r30, Y+1	; 0x01
  44:	fa 81       	ldd	r31, Y+2	; 0x02
  46:	30 97       	sbiw	r30, 0x00	; 0
  48:	01 f0       	breq	.+0      	; 0x4a <scheduler_run+0x4a>
  4a:	ff b6       	in	r15, 0x3f	; 63
  4c:	f8 94       	cli
  4e:	8b 81       	ldd	r24, Y+3	; 0x03
  50:	9c 81       	ldd	r25, Y+4	; 0x04
  52:	89 2b       	or	r24, r25
  54:	01 f4       	brne	.+0      	; 0x56 <scheduler_run+0x56>
  56:	09 95       	icall
  58:	8d 81       	ldd	r24, Y+5	; 0x05
  5a:	9e 81       	ldd	r25, Y+6	; 0x06
  5c:	f8 01       	movw	r30, r16
  5e:	ee 0f       	add	r30, r30
  60:	ff 1f       	adc	r31, r31
  62:	89 2b       	or	r24, r25
  64:	01 f4       	brne	.+0      	; 0x66 <scheduler_run+0x66>
  66:	e0 0f       	add	r30, r16
  68:	f1 1f       	adc	r31, r17
  6a:	ee 0f       	add	r30, r30
  6c:	ff 1f       	adc	r31, r31
  6e:	e0 50       	subi	r30, 0x00	; 0
  70:	f0 40       	sbci	r31, 0x00	; 0
  72:	11 82       	std	Z+1, r1	; 0x01
  74:	10 82       	st	Z, r1
  76:	00 c0       	rjmp	.+0      	; 0x78 <scheduler_run+0x78>
  78:	e0 0f       	add	r30, r16
  7a:	f1 1f       	adc	r31, r17
  7c:	ee 0f       	add	r30, r30
  7e:	ff 1f       	adc	r31, r31
  80:	df 01       	movw	r26, r30
  82:	a0 50       	subi	r26, 0x00	; 0
  84:	b0 40       	sbci	r27, 0x00	; 0
  86:	14 96       	adiw	r26, 0x04	; 4
  88:	8d 91       	ld	r24, X+
  8a:	9c 91       	ld	r25, X
  8c:	15 97       	sbiw	r26, 0x05	; 5
  8e:	e0 50       	subi	r30, 0x00	; 0
  90:	f0 40       	sbci	r31, 0x00	; 0
  92:	91 83       	std	Z+1, r25	; 0x01
  94:	80 83       	st	Z, r24
  96:	ff be       	out	0x3f, r15	; 63
  98:	0f 5f       	subi	r16, 0xFF	; 255
  9a:	1f 4f       	sbci	r17, 0xFF	; 255
  9c:	0a 30       	cpi	r16, 0x0A	; 10
  9e:	11 05       	cpc	r17, r1
  a0:	01 f0       	breq	.+0      	; 0xa2 <scheduler_run+0xa2>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <scheduler_run+0xa4>
  a4:	26 96       	adiw	r28, 0x06	; 6
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	cf 91       	pop	r28
  b2:	df 91       	pop	r29
  b4:	1f 91       	pop	r17
  b6:	0f 91       	pop	r16
  b8:	ff 90       	pop	r15
  ba:	df 90       	pop	r13
  bc:	cf 90       	pop	r12
  be:	08 95       	ret

Disassembly of section .text.scheduler_add:

00000000 <scheduler_add>:
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	00 d0       	rcall	.+0      	; 0x6 <scheduler_add+0x6>
   6:	00 d0       	rcall	.+0      	; 0x8 <scheduler_add+0x8>
   8:	00 d0       	rcall	.+0      	; 0xa <scheduler_add+0xa>
   a:	cd b7       	in	r28, 0x3d	; 61
   c:	de b7       	in	r29, 0x3e	; 62
   e:	dc 01       	movw	r26, r24
  10:	20 e0       	ldi	r18, 0x00	; 0
  12:	30 e0       	ldi	r19, 0x00	; 0
  14:	f9 01       	movw	r30, r18
  16:	ee 0f       	add	r30, r30
  18:	ff 1f       	adc	r31, r31
  1a:	e2 0f       	add	r30, r18
  1c:	f3 1f       	adc	r31, r19
  1e:	ee 0f       	add	r30, r30
  20:	ff 1f       	adc	r31, r31
  22:	e0 50       	subi	r30, 0x00	; 0
  24:	f0 40       	sbci	r31, 0x00	; 0
  26:	80 81       	ld	r24, Z
  28:	91 81       	ldd	r25, Z+1	; 0x01
  2a:	89 2b       	or	r24, r25
  2c:	01 f4       	brne	.+0      	; 0x2e <scheduler_add+0x2e>
  2e:	ba 83       	std	Y+2, r27	; 0x02
  30:	a9 83       	std	Y+1, r26	; 0x01
  32:	7c 83       	std	Y+4, r23	; 0x04
  34:	6b 83       	std	Y+3, r22	; 0x03
  36:	5e 83       	std	Y+6, r21	; 0x06
  38:	4d 83       	std	Y+5, r20	; 0x05
  3a:	df 01       	movw	r26, r30
  3c:	fe 01       	movw	r30, r28
  3e:	31 96       	adiw	r30, 0x01	; 1
  40:	86 e0       	ldi	r24, 0x06	; 6
  42:	01 90       	ld	r0, Z+
  44:	0d 92       	st	X+, r0
  46:	81 50       	subi	r24, 0x01	; 1
  48:	01 f4       	brne	.+0      	; 0x4a <scheduler_add+0x4a>
  4a:	00 c0       	rjmp	.+0      	; 0x4c <scheduler_add+0x4c>
  4c:	2f 5f       	subi	r18, 0xFF	; 255
  4e:	3f 4f       	sbci	r19, 0xFF	; 255
  50:	2a 30       	cpi	r18, 0x0A	; 10
  52:	31 05       	cpc	r19, r1
  54:	01 f4       	brne	.+0      	; 0x56 <scheduler_add+0x56>
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	26 96       	adiw	r28, 0x06	; 6
  5a:	0f b6       	in	r0, 0x3f	; 63
  5c:	f8 94       	cli
  5e:	de bf       	out	0x3e, r29	; 62
  60:	0f be       	out	0x3f, r0	; 63
  62:	cd bf       	out	0x3d, r28	; 61
  64:	cf 91       	pop	r28
  66:	df 91       	pop	r29
  68:	08 95       	ret

Disassembly of section .text.scheduler_remove:

00000000 <scheduler_remove>:
   0:	ac 01       	movw	r20, r24
   2:	20 e0       	ldi	r18, 0x00	; 0
   4:	30 e0       	ldi	r19, 0x00	; 0
   6:	f9 01       	movw	r30, r18
   8:	ee 0f       	add	r30, r30
   a:	ff 1f       	adc	r31, r31
   c:	e2 0f       	add	r30, r18
   e:	f3 1f       	adc	r31, r19
  10:	ee 0f       	add	r30, r30
  12:	ff 1f       	adc	r31, r31
  14:	e0 50       	subi	r30, 0x00	; 0
  16:	f0 40       	sbci	r31, 0x00	; 0
  18:	80 81       	ld	r24, Z
  1a:	91 81       	ldd	r25, Z+1	; 0x01
  1c:	48 17       	cp	r20, r24
  1e:	59 07       	cpc	r21, r25
  20:	01 f4       	brne	.+0      	; 0x22 <scheduler_remove+0x22>
  22:	11 82       	std	Z+1, r1	; 0x01
  24:	10 82       	st	Z, r1
  26:	2f 5f       	subi	r18, 0xFF	; 255
  28:	3f 4f       	sbci	r19, 0xFF	; 255
  2a:	2a 30       	cpi	r18, 0x0A	; 10
  2c:	31 05       	cpc	r19, r1
  2e:	01 f4       	brne	.+0      	; 0x30 <scheduler_remove+0x30>
  30:	08 95       	ret

Disassembly of section .text.scheduler_init:

00000000 <scheduler_init>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	0e 94 00 00 	call	0	; 0x0 <scheduler_init>
   8:	08 95       	ret

ses_timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.timer2_init 0000003a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.__vector_13 0000005a  00000000  00000000  0000006e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .bss.timer2_callback 00000002  00000000  00000000  000000c8  2**0
                  ALLOC

Disassembly of section .text.timer2_init:

00000000 <timer2_init>:
   0:	90 93 00 00 	sts	0x0000, r25
   4:	80 93 00 00 	sts	0x0000, r24
   8:	e4 e6       	ldi	r30, 0x64	; 100
   a:	f0 e0       	ldi	r31, 0x00	; 0
   c:	80 81       	ld	r24, Z
   e:	8f 7b       	andi	r24, 0xBF	; 191
  10:	80 83       	st	Z, r24
  12:	e0 eb       	ldi	r30, 0xB0	; 176
  14:	f0 e0       	ldi	r31, 0x00	; 0
  16:	80 81       	ld	r24, Z
  18:	82 60       	ori	r24, 0x02	; 2
  1a:	80 83       	st	Z, r24
  1c:	8a ef       	ldi	r24, 0xFA	; 250
  1e:	80 93 b3 00 	sts	0x00B3, r24
  22:	e1 eb       	ldi	r30, 0xB1	; 177
  24:	f0 e0       	ldi	r31, 0x00	; 0
  26:	80 81       	ld	r24, Z
  28:	84 60       	ori	r24, 0x04	; 4
  2a:	80 83       	st	Z, r24
  2c:	e0 e7       	ldi	r30, 0x70	; 112
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	80 81       	ld	r24, Z
  32:	82 60       	ori	r24, 0x02	; 2
  34:	80 83       	st	Z, r24
  36:	b9 9a       	sbi	0x17, 1	; 23
  38:	08 95       	ret

Disassembly of section .text.__vector_13:

00000000 <__vector_13>:
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	0b b6       	in	r0, 0x3b	; 59
   a:	0f 92       	push	r0
   c:	11 24       	eor	r1, r1
   e:	2f 93       	push	r18
  10:	3f 93       	push	r19
  12:	4f 93       	push	r20
  14:	5f 93       	push	r21
  16:	6f 93       	push	r22
  18:	7f 93       	push	r23
  1a:	8f 93       	push	r24
  1c:	9f 93       	push	r25
  1e:	af 93       	push	r26
  20:	bf 93       	push	r27
  22:	ef 93       	push	r30
  24:	ff 93       	push	r31
  26:	e0 91 00 00 	lds	r30, 0x0000
  2a:	f0 91 00 00 	lds	r31, 0x0000
  2e:	30 97       	sbiw	r30, 0x00	; 0
  30:	01 f0       	breq	.+0      	; 0x32 <__vector_13+0x32>
  32:	09 95       	icall
  34:	ff 91       	pop	r31
  36:	ef 91       	pop	r30
  38:	bf 91       	pop	r27
  3a:	af 91       	pop	r26
  3c:	9f 91       	pop	r25
  3e:	8f 91       	pop	r24
  40:	7f 91       	pop	r23
  42:	6f 91       	pop	r22
  44:	5f 91       	pop	r21
  46:	4f 91       	pop	r20
  48:	3f 91       	pop	r19
  4a:	2f 91       	pop	r18
  4c:	0f 90       	pop	r0
  4e:	0b be       	out	0x3b, r0	; 59
  50:	0f 90       	pop	r0
  52:	0f be       	out	0x3f, r0	; 63
  54:	0f 90       	pop	r0
  56:	1f 90       	pop	r1
  58:	18 95       	reti
